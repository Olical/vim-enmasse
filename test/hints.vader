Before (read the example grepable file and grep for quickfix):
  let lines = readfile("test/grepable.txt", "b")
  silent grep! quickfix test/grepable.txt

Execute (a hint is displayed for the first line on open):
  redir => messages
  EnMasse
  redir END

  quit
  let result = get(split(messages, "\n"), -1, "")

  AssertEqual lines[1], result

Execute (when the cursor is moved, the hint updates):
  EnMasse
  normal j

  redir => messages
  doautocmd CursorMoved
  redir END

  quit
  let result = get(split(messages, "\n"), -1, "")

  AssertEqual lines[3], result

Execute (when lines have been joined, the hint contains both of the results seperated with a pipe):
  silent grep! "Dupe!" test/grepable.txt
  silent grepadd! "Dupe!" test/grepable.txt

  redir => messages
  EnMasse
  redir END

  quit
  let result = get(split(messages, "\n"), -1, "")

  AssertEqual join([lines[5], lines[5]], " | "), result

Execute (when a line is too long it becomes truncated):
  silent grep! "way too long" test/grepable.txt

  redir => messages
  EnMasse
  redir END

  quit
  let result = get(split(messages, "\n"), -1, "")

  AssertNotEqual lines[4], result
  Assert result =~# '\vAnd.*\.\.\..*vitae.'